---
title: 如何学习（一）
tags:  [学习]
layout: post
description: 
comments: true
---

虽然我从小到大都一直在学习，但是对于如何学习进行认真的思考却从来没有过。

这段时间刚好看了几本关于如何学习的书籍，其中最喜欢的一本是Scalers写的《刻意学习》-北京联合出版社。

Scalers是个中国人，Scalers应该不是他的真名，我没有刻意去调查他的资料，但是从他书中的自我介绍中得知他也是个IT工程师，所以他的思维方式和我比较接近，他提出的学习系统的观念对于我来说比较好理解。他把学习的过程都做了量化，这样以来我们就可以对学习的效果进行度量。

首先他把学习时间长度做出了量化，他借助了数学里的“底数”和“阶”的概念，提出了“N阶持续行动者”的概念。以10为底数，N为幂，10的N次方代表能够持续行动的天数。

```
10^1天 = 10天（一周）
10^2天 = 100天（三个月）
10^3天 = 1000天（三年）
10^4天 = 10000天（三十年）
10^5天 = 100000天（三百年）
10^6天 = 1000000天（三千年）
10^7天 = 10000000天（三万年）
……
```

1阶行动者大概能连续坚持10天就失去动力了，这是由于他们的行动系统出了问题，Scalers对行动系统下的定义是维持学习动力的系统。对于如何修补行动系统以后我在讨论。

2阶行动者成功的完成了100天的持续学习，然后就放弃了。到达这个阶段的基本可以算是刚刚入门，如果不持续会很容易会到原来的模式。这个阶段放弃的人多数是因为学习系统出问题，学习系统解决的是如何进步的问题。

3阶行动者是成功的完成了1000天的持续学习。只有达到3阶的人才能算是正真养成了习惯，才能产生创新。

4阶行动者是已经坚持了30年，这时候应该能成为某个领域的大牛了。

5阶300年已经不是一个人的问题，而是一个家族，一个企业的问题了。

6阶3000年是一个文明的问题。

7阶30000年是整个人类的问题。

## 我的体验

Scalars提出的N阶概念，从时间长度上给出了一个判断处于什么学习阶段的划分方法。那么我就结合自身的实际情况来看看我的一些爱好的学习情况。

### 游泳

我2015年开始真正开始练习游泳，由于日本的健身房除了周3不营业以外，每天的营业时间到都晚上12点，所以即使我每天加班到10点，回到家后，还是可以去健身房游泳的。这个游泳的习惯一直坚持了一年，直到我因为要到杭州长期出差才停止。我的感觉是头几个月进步很快，特别是学会轻松游泳的感觉非常兴奋，但是后来的感觉真的难进步，于是慢慢把游泳当成了锻炼身体，而不再设定学习目标，可以说现在的游泳水平就是2阶水平。

### 吉他

我从91年读大学时就开始自学吉他，当时也非常着迷，虽然几乎每天都拿起来玩，但是直到大学毕业也仅仅是能弹唱而已。2015年突然对弹吉他又重新激发起兴致，于买了一把比较好的吉他，空闲的时候就尝试给原唱歌曲伴奏，对于难度不大的歌曲，基本能很好的伴奏了，但是对于复杂的伴奏真是力不从心，明显感觉吉他基本功不扎实。吉他水平是处在2阶水平。

### 编程

我92年开始自学计算机编程，C/C++,Basic，MASM,FoxBase，数据结构，操作系统等，统统都学了，之所以学这么多是因为当时要参加全国计算机软件工程师考试，大学毕业时通过了初级程序员的考试，就因为这个能力，所以能应聘到某所大学担任计算机教师，96年得到机会去四川联合大学学习了一年的研究生课程，当时学习的是所谓基于知识体系的人工智能语言[Turbo Prolog](https://zh.wikipedia.org/wiki/Visual_Prolog)，不过Turbo Prolog已经被淘汰了，而当年只看过一本书的神经网络，现在反倒成了人工智能的热门。2004年到北航读研究生的学的是软件工程，主要研究的是项目管理。2006年底，我选择到日本一家公司打工，结束了教师生涯，而开始了自己程序员的生涯。

我的工作几乎都在和写代码有关，做过的项目涉及的开发语言包括C/CPP, C#, VBA, Java, Pytho, PHP, javascript甚至还有Cobol，可以说我的编程技能从时间长度划分来看已经是3阶水平，甚至接近4阶，但是为什么我未能成为大师。

## 为什么未能成为大师？

我的三个兴趣，虽然坚持的时间不短了，但是没有一个能让我骄傲的，特别是编程能力，可以说是我用来吃饭的技能，为什么也未能让我打到登峰造极的地步呢？原因只有一个：

### 学的不够快，不够好。

如果不能在同样的时间内赶超其他95%的人，无论你学多久永远都不会是5%的大牛。要做到短时间内超过别人，除了天资以外，另外两个变量就是时间和学习技巧。

1. 保证时间，保证效果

    1. 养成习惯
    1. 坚持执行自己的习惯养成计划
    1. 保证时间有效率，不做无用功
        1. 一切行动必须有成效，成效的检验结果就是输出，哪怕就是一篇短短的心得也可以是输出。

1. 学习技巧

    1. 对技术发展预判，避免错误投入精力
        1. 计算机技术发展很快，有些技术很可能等你学会就已经被淘汰了。
        1. 费了九头牛的力气却只解决了现在一根毛的问题
        1. 选择立刻能产生价值的项目做，避免为了学习而学习的项目
    1. 开始阶段，首先是模仿（学习时间长度为100天，即达到2阶位标准）
        1. 挑选优秀的项目模仿，如果可能的话，加入这些项目
        1. 检验学习结果的方法就是输出产品
            1. 选择一个类似的项目开始作为作业，用来检验学习结果
    1. 3阶阶段（3年），保证输出数量
        1. 这个阶段要有足够的输出数量
        1. 随时注意吸取其他人的先进的技术
            1. 保证阅读量，每天最少一篇技术文章，必须要写心得。
            1. 如果发现别人的技术已经超过自己，必须想办法引入自己的项目中。
        1. 招募其他有兴趣的人加入项目
            1. 扩大项目的影响力
            1. 完善项目文档

